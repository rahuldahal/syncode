generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  picture   String
  firstname String?
  lastname  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  ownedProjects        Project[]      @relation(name: "Owner")
  collaboratedProjects Project[]      @relation(name: "Collaborators")
  notifications        Notification[] @relation(name: "Notifications")
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  owner         User   @relation(name: "Owner", fields: [ownerId], references: [id])
  ownerId       Int
  collaborators User[] @relation(name: "Collaborators")
  files         File[] @relation(name: "Project")
}

model File {
  id        Int      @id @default(autoincrement())
  name      String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  project   Project @relation(name: "Project", fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int
}

model Notification {
  id        Int              @id @default(autoincrement())
  type      NotificationType
  content   String
  user      User             @relation("Notifications", fields: [userId], references: [id])
  userId    Int
  createdAt DateTime         @default(now())
}

enum NotificationType {
  invitation
  confirmation
  disconnection
}
